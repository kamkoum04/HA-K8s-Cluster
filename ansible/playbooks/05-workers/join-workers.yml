---

- name: Join Worker Nodes
  hosts: workers
  become: yes
  vars_files:
    - ../../vars.yml
  tasks:
    - name: Check if already joined to cluster
      stat:
        path: /etc/kubernetes/kubelet.conf
      register: kubelet_conf

    - name: Display worker status
      debug:
        msg: "🔍 Worker {{ inventory_hostname }} join status: {{ 'Already joined' if kubelet_conf.stat.exists else 'Needs to join' }}"

    - name: Generate fresh worker join command
      shell: kubeadm token create --print-join-command
      register: worker_join_cmd
      delegate_to: "{{ groups['masters'][0] }}"
      run_once: true
      when: not kubelet_conf.stat.exists

    - name: Display join command (for debugging)
      debug:
        msg: "🔧 Join command ready for {{ inventory_hostname }}"
      when: not kubelet_conf.stat.exists

    - name: Join worker to cluster
      shell: "{{ worker_join_cmd.stdout }}"
      register: join_result
      when: not kubelet_conf.stat.exists

    - name: Show join result
      debug:
        msg: "📝 Join result: {{ join_result.stdout | default('Skipped - already joined') }}"

    - name: Wait for kubelet to start
      systemd:
        name: kubelet
        state: started
        enabled: yes
      when: not kubelet_conf.stat.exists

    - name: Wait for node to be ready with correct name
      shell: kubectl get node {{ inventory_hostname }} --no-headers | awk '{print $2}'
      register: node_status
      until: node_status.stdout == "Ready"
      retries: 60
      delay: 10
      delegate_to: "{{ groups['masters'][0] }}"
      when: not kubelet_conf.stat.exists

    - name: Display join success
      debug:
        msg: "✅ Worker {{ inventory_hostname }} successfully joined and ready"
      when: not kubelet_conf.stat.exists

- name: Verify Workers Status
  hosts: "{{ groups['masters'][0] }}"
  become_user: ansible
  tasks:
    - name: Get all worker nodes
      shell: kubectl get nodes -l '!node-role.kubernetes.io/control-plane' --no-headers | wc -l
      register: worker_count

    - name: Display worker status
      debug:
        msg: "🎯 Worker Status: {{ worker_count.stdout }}/2 workers ready"

    - name: Display all nodes
      shell: kubectl get nodes -o wide
      register: all_nodes

    - name: Show cluster overview
      debug:
        msg: "📋 Cluster Overview:"
        verbosity: 0

    - name: Show nodes
      debug:
        var: all_nodes.stdout_lines